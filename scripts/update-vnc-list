#! /usr/bin/python3
import sys
import os
import subprocess
import psutil

def start_vnc_session(user):
    cmd = ['sudo', '--set-home', '--non-interactive', '--user=%s' % user,
           '/etc/guacamole/start-vnc.py']
    p = subprocess.run(cmd, capture_output=True)
    print('Return values of start-vnc.py:', p.returncode, 'stdout:', p.stdout, 'stderr:', p.stderr)
    return p.stdout

def get_vnc_sessions():
    sessions = {}
    for proc in psutil.process_iter(['pid', 'name', 'username', 'cmdline']):
        name = proc.info['name']
        if not ('Xvnc' in name or 'Xtigervnc' in name):
            continue
        uname = proc.info['username']
        #print(proc.info)
        cmd = proc.info['cmdline']
        if len(cmd) < 2:
            print('Command-line too short:', cmd)
            continue
        # second arg is like ":1"
        port = cmd[1]
        if not port.startswith(':'):
            print('Command', name, ': first command-line arg, "%s", does not start with ":"' % port)
            continue
        try:
            portnum = int(port.replace(':', ''))
        except ValueError:
            print('Failed to parse port number in command-line arg', port)
            continue

        # Look for password file in command line.
        # Did we start this vnc server?
        guac = False
        for word in cmd:
            if word.endswith('passwd-guac'):
                guac = True
        sessions[uname] = (portnum, guac)
    return sessions

# Check for password file like /home/test1/.vnc/passwd-guac in command-line args?

print('Running update-vnc-list with args', sys.argv[1:])
if len(sys.argv) < 2:
    print('Need username command-line arg')
    sys.exit(-1)
user = sys.argv[1]

# Check if user already has a VNC session; start one if not
sessions = get_vnc_sessions()

if not user in sessions:
    print('Starting VNC session for user', user)
    start_vnc_session(user)
    # Now hopefully find newly created session!
    sessions = get_vnc_sessions()
    if not user in sessions:
        print('Failed to create new session for user', user)
        sys.exit(-1)

with open('/etc/guacamole/unix-user-mapping.xml-tmp', 'w') as f:
    f.write('''<?xml version="1.0" encoding="UTF-8"?>
<unix-user-mapping serviceName="guacamole">
''')

#     f.write('''
#     <config name="SSH" protocol="ssh">
#       <param name="hostname" value="localhost" />
#     </config>
# ''')
    
    for uname,(portnum,guac) in sessions.items():

        if guac:
            passwd = '<param name="password" value="GUAC" />'
        else:
            passwd = ''

        f.write('''
        <config name="VNC Window %i" protocol="vnc">
          <param name="hostname" value="localhost" />
          <param name="port" value="%i" />
          %s
        </config>
        <config name="SSH %s@" protocol="ssh">
          <param name="hostname" value="localhost" />
          <param name="username" value="%s" />
        </config>
        <user name="%s">
          <config-ref name="VNC Window %i" />
          <config-ref name="SSH %s@" />
        </user>
''' % (portnum, portnum + 5900, passwd, uname, uname, uname, portnum, uname))

    f.write('</unix-user-mapping>\n')

os.rename('/etc/guacamole/unix-user-mapping.xml-tmp',
          '/etc/guacamole/unix-user-mapping.xml')
